[tox]
minversion = 3.20.0
# For using setuptools_scm.
isolated_build = true

[testenv]
deps =
    git+https://gitlab.com/gemseo/dev/gemseo.git@develop
    -r requirements/test-{basepython}.txt
extras = test
passenv =
    # Required for scilab.
    HOME
setenv =
    coverage: __COVERAGE_POSARGS=--cov-config setup.cfg --cov --cov-report=xml --cov-report=html
commands =
    pytest {env:__COVERAGE_POSARGS:} {posargs}

[testenv:check]
description = run code formatting and checking
basepython = python3.9
deps = -r requirements/check.txt
skip_install = true
whitelist_externals =
    git
commands =
    pre-commit install
    pre-commit run --all-files

[testenv:doc]
description = build documentation
basepython = python3.9
deps = -r requirements/doc.txt
extras = doc
passenv =
    # Required by matplotlib.
    HOME
    # Path to the directory that contains plantuml.jar.
    PLANTUML_DIR
commands =
    # Cross platform directory removal.
    python -c "import shutil; shutil.rmtree('doc_src/source/_modules', ignore_errors=True)"
    sphinx-build -n -j auto -b html doc_src/source {toxinidir}/doc {posargs:}

[testenv:dist]
description = create and check the pypi distribution
basepython = python3.9
deps = -r requirements/dist.txt
skip_install = true
whitelist_externals = rm
commands =
    rm -rf dist build
    python -m build
    twine check dist/*
    python setup.py check --metadata

[testenv:pypi-py{37,38,39}]
description = test the pypi distribution
deps = gemseo-scilab[test]
skip_install = true

[testenv:update-deps-{doc,dist,check}]
description = update the non test envs dependencies with pip-tools
basepython = python3.9
extras =
    doc: {[testenv:doc]extras}
setenv =
passenv =
deps =
    dist: {[testenv:dist]deps}
    check: {[testenv:check]deps}
    pip-tools
skip_install =
    dist: true
    check: true
recreate =
    doc: true
commands =
    doc: pip-compile -U --extra doc -o requirements/doc.txt
    dist: pip-compile -U requirements/dist.in
    check: pip-compile -U requirements/check.in
    check: pre-commit autoupdate

[testenv:update-deps-test-py{37,38,39}]
description = update the test envs dependencies with pip-tools
extras = {[testenv]extras}
setenv =
passenv =
deps = pip-tools
recreate = true
whitelist_externals = sed
commands =
    pip-compile -U --extra test -o requirements/test-{basepython}.txt
    # Do not pin gemseo because we install the version from the develop branch.
    sed -i  '/gemseo==/d' requirements/test-{basepython}.txt
